System.register("chunks:///_virtual/SkillHandleEffect.ts",["./rollupPluginModLoBabelHelpers.js","cc","./FixMath.ts","./index83.ts","./EnumDefine.ts","./SkillHandleBase.ts","./BuffCtr.ts"],(function(t){"use strict";var e,r,i,f,n,a,l,c,s,u;return{setters:[function(t){e=t.inheritsLoose,r=t.createForOfIteratorHelperLoose},function(t){i=t.cclegacy},function(t){f=t.FixMath},null,function(t){n=t.BuffGroupType,a=t.EffectTriggerType,l=t.SpBuffState,c=t.StateTrigerType},function(t){s=t.SkillHandleBase},function(t){u=t.freeBuffList}],execute:function(){i._RF.push({},"638ceVkqdNA0r+g4OOZWvNi","SkillHandleEffect",void 0);t("SkillHandleEffect",function(t){function i(){return t.apply(this,arguments)||this}return e(i,t),i.prototype.beginRun=function(){var t=this.runner,e=t.useSkill.config.id;if(t.cast.hurtNumCount++,t.cast.buffCtr.removeBuff(n.DESTROY_WHEN_SKILL_AFTER),this.execBeginAction(),t.useSkill.triggerEffect)for(var i,s=t.cast.skillctr.skillEffects,o=r(s);!(i=o()).done;){var g=i.value;if((g.triggerType==a.USE_SKILL||g.triggerType==a.ALL_ATTACK)&&t.cast.skillctr.checkTriggerCount(g.triggerType,g.limit)){var p=g.param5;if(p&&p.length>0){for(var d=!1,S=0;S<p.length;S++)if(p[S]==e){d=!0;break}if(!d)continue}0==g.useType?this.addTask(g.id,t.cast.position,g.runner,t.cast):1==g.useType&&t.cast.skillctr.addSkill(g.id)}}for(var T,k=t.cast.buffCtr.getBuffByType(n.USE_SKILL_ADD),v=r(k);!(T=v()).done;){var h=T.value;if(!(t.cast.skillctr.getRecordDamage(e)>h._limit)){var y=Math.min(f.roundInt(t.cast.skillctr.getRecordDamage(e)+h._value),h._limit);t.cast.skillctr.setRecordDamage(e,y)}}if(u(k),t.useSkill.triggerEffect&&t.cast.data.getBuffState(l.StateTriger)>0){for(var E,_=t.cast.buffCtr.getBuffByType(n.STATE_TRIGER),B=r(_);!(E=B()).done;){E.value.onStateTrigger(c.Skill_Effect)}u(_)}this.runner.interrupt()},i}(s));i._RF.pop()}}}));

